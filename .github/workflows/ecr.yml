---
name: Build and push to ECR

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      role-session-name:
        required: false
        type: string
        default: gh-actions
      role-to-assume:
        required: true
        type: string
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      ecr-repo-name:
        required: true
        type: string
      default-tag:
        required: false
        type: string
      image-tag:
        required: true
        type: string
      image-param:
        required: true
        type: string

    outputs:
      image:
        description: The full image URI used in the container registry
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}

    outputs:
      filename: ${{ steps.tf-plan.outputs.filename }}

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ inputs.aws-region }}
          role-session-name: ${{ inputs.role-session-name }}
          role-to-assume: ${{ inputs.role-to-assume }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPO_NAME: ${{ inputs.ecr-repo-name }}
          IMAGE_TAG: ${{ inputs.image-tag }}
        run: |
          ECR_REPO="${ECR_REGISTRY}/${ECR_REPO_NAME}"
          IMAGE="${ECR_REPO}:${IMAGE_TAG}"
          docker build --tag "${IMAGE}" .
          docker push "${IMAGE}"
          echo "ecr-repo=${ECR_REPO}" >> $GITHUB_OUTPUT
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT

      - name: Push default tag
        if: inputs.default-tag != ''
        env:
          IMAGE: ${{ steps.build.outputs.image }}
          ECR_REPO: ${{ steps.build.outputs.ecr-repo }}
          DEFAULT_TAG: ${{ inputs.default-tag }}
        run: |
          docker tag "${IMAGE}" "${ECR_REPO}:${DEFAULT_TAG}"
          docker push "${ECR_REPO}:${DEFAULT_TAG}"

      - name: Update SSM parameter
        run: |
          aws ssm put-parameter \
            --name "${{ inputs.image-param }}" \
            --value "${{ steps.build.outputs.image }}" \
            --type String
